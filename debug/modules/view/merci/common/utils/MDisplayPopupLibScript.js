Aria.tplScriptDefinition({
  $classpath: 'modules.view.merci.common.utils.MDisplayPopupLibScript',
  $dependencies: [
    'modules.view.merci.common.utils.MCommonScript'
  ],
  $constructor: function() {
    this.utils = modules.view.merci.common.utils.MCommonScript;
    this.urlManager = modules.view.merci.common.utils.URLManager;
  },

  $prototype: {
    
    closePopup: function(evt, args) {
      args.moduleCtrl.goBack();
    },

    initCurrData: function(args) {
      if (args.data != null) {
        return args.data.currData;
      } else {
        return args;
      }
    },
    
    /**
     * function called when object tag is loaded
     * @param event
     * @param args
     */
    _onHtmlPopupLoad: function(event, args) {
      if (typeof afterCustomLinkLoad == 'function') {
        afterCustomLinkLoad({
          'data': args
        });
      }
    },

      getCurrencyConversionSource: function(data) {
        var items = [];
        var blockCurrency = null;
        if (data.currency.disabled != null) {
          blockCurrency = data.currency.disabled.split(",");
        }

        if (data.currency.list != null && data.showButton) {
          $.each(data.currency.list, function(key, val) {
            if (!(blockCurrency != null && blockCurrency != '' && $.inArray(val[0], blockCurrency) != -1)) {
              items.push(val[1] + '(' + val[0] + ')');
            }
          });
        }

        return items;
      },

      /**
       * method which makes the server call to apply currency
       * @param event
       * @param args
       */
      applyCurrency: function(event, args) {
        var inputVal = $('#newCurrency').val();
        $('#convErrDiv').hide();
        if (inputVal.indexOf('(') != -1 && inputVal.indexOf(')') != -1) {
          var b = inputVal.split("(");
          var c = b[1];
          if (b[2] != undefined) {
            c = b[2];
          }
          var d = c.split(")");
          inputVal = d[0];
        }
        if (inputVal == "") {
          if ($('#myonoffswitch').is(':checked') == true) {
            inputVal = localStorage.getItem('convCurrency');
          } else {
            inputVal = localStorage.getItem('orgCurrency');
          }
        }

        $(".cConvertertools ").toggleClass("selected");

        var params = 'CURRENCY_TO=' + inputVal + '&CURRENCY_FROM=' + args.currData.code + '&PAGE_TICKET=' + args.currData.pgTkt + '&result=json&PLTG_RECOMMENDATION_INDEX=';

        var actionName = 'MFareCurrencyConversion.action';
        var request = {
          parameters: params,
          action: actionName,
          method: 'POST',
          expectedResponseType: 'json',
          cb: {
            'fn': this.__onCurrencyCB,
            'args': {
              current: this,
              requester: args.currData.currentPage,
              moduleCtrl: args.moduleCtrl
            },
            scope: this
          }
        };
        this.utils.showMskOverlay(true);
        this.urlManager.makeServerRequest(request, false);
      },

      __onCurrencyCB: function(response, args) {
        var resData = response.responseJSON;
        var bp = modules.view.merci.common.utils.URLManager.getBaseParams();
        if (resData.currencyCode != null && resData.exchangeRate != null && resData.errorMessage != "") {
          args.requester.currCode = resData.currencyCode;
          args.requester.exchRate = resData.exchangeRate;
          if ($('#newCurrency').val() != "") {
            localStorage.setItem("convCurrency", args.requester.currCode);
          }

          if (bp[14] != null && bp[14] != "") {
            args.current.__merciFunc.appCallBack(args.current.data.siteParams.siteAppCallback, "://?flow=currencyConv/currencyConvDone=true");
          }

          // Autogenerated, do not edit. All changes will be undone.
          jsonResponse.currencyCode = resData.currencyCode ;
          jsonResponse.exchangeRate = resData.exchangeRate ;

          this.closePopup(null,args);

        } else {
          $(".panel.currencyConverter").toggleClass("addHeight");
          $(".cConvertertools ").toggleClass("selected");
          if (resData.data.booking.MError_A != null) {
            if (resData.data.booking.MError_A.requestParam.checkBEError[3001] != undefined) {
              resData.errorMessage = resData.data.booking.MError_A.requestParam.checkBEError[3001];
            }
          }
          $('#errMsg').text(resData.errorMessage);
          $('#convErrDiv').show();
        }

      }
    
  }
});